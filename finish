#!/bin/bash

#===FINISH===

#===SETTING UP VARIABLES AND PATHS===

printf "Setting up paths and importing configuration settings\n"
PATH_THIS_FILE="$(readlink -f ${0})"
PATH_INITPI_DIR="$(dirname ${PATH_THIS_FILE})"
source "${PATH_INITPI_DIR}/paths"
if [[ -f "$PATH_INITPI_CONF" ]]
then
	source "$PATH_INITPI_CONF"
else
	read -p "Unable to locate configuration file\n"
	exit 1
fi

#===BEGIN LOGGING===

{

printf "===BEGIN FINISH===\n"

#===SETTING UP SYSTEM FOR FINAL USER CONFIGURATION===

printf "Converting revert timer from minutes to seconds\n"
REVERT_TIMER="$((REVERT_TIMER*60))"

printf "Setting up firewall\n"
ufw limit "${NEW_SSH_PORT}/tcp"
ufw enable

printf "Enabling fail2ban\n"
cp "$PATH_FAIL2BAN_CONF" "$PATH_FAIL2BAN_LOCAL"

printf "Unlocking new user\n"
chage -E -1 "$NEW_USER"

printf "Starting SSH service\n"
systemctl enable ssh
systemctl start ssh

#===WAIT FOR SSH CONNECTION===

printf "Waiting for SSH connection...\n"
while [[ -z "$CONNECTION" ]]
do
	if [[ "$REVERT_TIMER" -eq 0 ]]
	then
		CONNECTION="$(who | grep ${NEW_USER})"
	else
		if [[ "$SECONDS" -le "$REVERT_TIMER" ]]
		then
			CONNECTION="$(who | grep ${NEW_USER})"
		else
			break
		fi
	fi
	sleep 1
done

#===COMPLETING USERNAME SETUP===

printf "Unlocking old user\n"
chage -E -1 "$OLD_USER"

printf "Deleting old user (if different from new user)\n"
if [[ -n "$CONNECTION" ]]
then
	#IF THERE IS A NEW USER, DELETE THE OLD USER
	if [[ "$OLD_USER" != "$NEW_USER" ]]
	then
		sudo deluser -remove-home "$OLD_USER"
		sed -i "/^${OLD_USER} /d" "$PATH_SUDO_PASSWORD_CONF"
	fi
	
printf "Reverting system if timer expired without a login occuring\n"
else
	#IF THERE IS A NEW USER, DELETE IT
	#IF THERE IS NOT, REVERT TO DEFAULT PASSWORD
	if [[ "$OLD_USER" == "$NEW_USER" ]]
	then
		echo "${OLD_USER}:raspberry" | chpasswd
	else
		sudo deluser -remove-home "$NEW_USER"
		rm -r "$PATH_USER_SSH"
	fi
	#REVERT SYSTEM
	cp "$PATH_WPA_CONF_BACKUP" "$PATH_WPA_CONF"
	wpa_cli -i wlan0 reconfigure
	cp "$PATH_SUDO_PASSWORD_CONF_BACKUP" "$PATH_SUDO_PASSWORD_CONF"
	cp "$PATH_SSH_CONF_BACKUP" "$PATH_SSH_CONF"
	systemctl stop ssh
	systemctl disable ssh
	rm "$PATH_FAIL2BAN_LOCAL"
	ufw reset
	apt-get remove fail2ban ufw -y
	apt-get autoremove --purge -y
	apt-get clean -y
fi

#===TEAR DOWN PROGRAM (SELF-DESTRUCT)===

printf "Stopping and removing initpi systemd service\n"
rm "$PATH_INITPI_NEXT"
systemctl disable initpi.service
systemctl daemon-reload
rm "$PATH_INITPI_SERVICE"

printf "===FINISH END===\n\n"

} |& tee -a "$PATH_INITPI_LOG"

exit 0
